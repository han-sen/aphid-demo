{"version":3,"sources":["actions/index.js","components/NewBug.js","components/Modal.js","components/FilterForm.js","components/BugChart.js","components/SideBar.js","components/BugStatus.js","components/BugSeverity.js","components/EditBug.js","components/BugError.js","components/BugBody.js","components/ExpandedBug.js","components/BugTitle.js","components/Bug.js","components/BugDropdown.js","components/BugFeed.js","components/Dashboard.js","components/NavBar.js","App.js","seed.js","reducers/index.js","serviceWorker.js","index.js"],"names":["selectBug","bug","console","log","type","payload","connect","state","addBug","props","useState","title","project","severity","blameFile","summary","readOut","status","input","setInput","handleChange","event","target","id","value","className","onSubmit","preventDefault","setModalIsActive","htmlFor","name","onChange","Modal","modalIsActive","modalTitle","aria-label","onClick","children","bugs","selectedBug","filters","selectFilter","filter","activeButton","setActiveButton","bugFilter","setBugFilter","setFilterButton","e","changeFilter","key","map","i","BugChart","data","forEach","useEffect","ctx","document","getElementById","colors","Chart","labels","datasets","minor","moderate","breaking","backgroundColor","borderColor","minBarLength","barThickness","options","animation","animateScale","cornerRadius","cutoutPercentage","legend","display","position","align","fontColor","fontFamily","boxWidth","padding","usePointStyle","drawRoundedRectangle","scales","yAxes","ticks","beginAtZero","length","width","height","style","maxWidth","SideBar","BugStatus","BugSeverity","editBug","newBugs","BugError","error","deleteBug","newList","submitText","BugTitle","slice","Bug","isOpen","setIsOpen","isActive","setIsActive","toggle","checkFilters","sort","a","b","NavBar","role","href","aria-expanded","data-target","aria-hidden","App","seedData","combineReducers","action","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","createStore","reducers","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6816f70e.chunk.js","sourcesContent":["// action create\nexport const selectBug = (bug) => {\n    // return an action\n    console.log(bug);\n    return {\n        type: \"BUG_SELECTED\",\n        payload: bug,\n    };\n};\n\nexport const addBug = (bug) => {\n    console.log(bug);\n    return {\n        type: \"ADD_BUG\",\n        payload: bug,\n    };\n};\n\nexport const editBug = (bug) => {\n    console.log(bug);\n    return {\n        type: \"EDIT_BUG\",\n        payload: bug,\n    };\n};\n\nexport const deleteBug = (bug) => {\n    console.log(bug);\n    return {\n        type: \"DELETE_BUG\",\n        payload: bug,\n    };\n};\n\nexport const selectFilter = (filter) => {\n    // return an action\n    console.log(filter);\n    return {\n        type: \"FILTER_SELECTED\",\n        payload: filter,\n    };\n};\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addBug } from \"../actions\";\n\nfunction NewBug(props) {\n    const [input, setInput] = useState({\n        title: \"\",\n        project: \"\",\n        severity: \"moderate\",\n        blameFile: \"\",\n        summary: \"\",\n        readOut: \"\",\n        status: \"open\",\n    });\n    const handleChange = (event) => {\n        setInput({ ...input, [event.target.id]: event.target.value });\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        props.addBug(input);\n        props.setModalIsActive(false);\n    };\n    return (\n        <div className=\"new_bug_wrap\">\n            <form onSubmit={handleSubmit} className=\"new_bug_form\">\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"title\">\n                        Title:\n                    </label>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"title\"\n                        id=\"title\"\n                        value={input.title}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"project\">\n                        Project:\n                    </label>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"project\"\n                        id=\"project\"\n                        value={input.project}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"blameFile\">\n                        Blame File:\n                    </label>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"blameFile\"\n                        id=\"blameFile\"\n                        value={input.blameFile}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"summary\">\n                        Summary:\n                    </label>\n                    <textarea\n                        className=\"textarea\"\n                        type=\"text\"\n                        name=\"summary\"\n                        id=\"summary\"\n                        value={input.summary}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"readOut\">\n                        Error Readout:\n                    </label>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"readOut\"\n                        id=\"readOut\"\n                        value={input.readOut}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field is-grouped last-row\">\n                    <label className=\"label\" htmlFor=\"severity\">\n                        Severity:\n                    </label>\n                    <div className=\"select\">\n                        <select\n                            name=\"severity\"\n                            id=\"severity\"\n                            onChange={handleChange}\n                            value={input.severity}\n                        >\n                            <option value=\"moderate\">Moderate</option>\n                            <option value=\"minor\">Minor</option>\n                            <option value=\"breaking\">Breaking</option>\n                        </select>\n                    </div>\n                    <label className=\"label\" htmlFor=\"status\">\n                        Bug Status:\n                    </label>\n                    <div className=\"select\">\n                        <select\n                            name=\"status\"\n                            id=\"status\"\n                            onChange={handleChange}\n                            value={input.status}\n                        >\n                            <option value=\"open\">Open</option>\n                            <option value=\"closed\">Closed</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"field is-grouped\">\n                    <div className=\"control\">\n                        <button type=\"submit\" className=\"button is-link\">\n                            Add Bug\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(state);\n    return {\n        addBug: state.addBug,\n    };\n};\n\nexport default connect(mapStateToProps, {\n    addBug,\n})(NewBug);\n","import React from \"react\";\n\nexport default function Modal(props) {\n    return (\n        <div className={props.modalIsActive ? \"modal is-active\" : \"modal\"}>\n            <div className=\"modal-background\"></div>\n            <div className=\"modal-card\">\n                <header className=\"modal-card-head\">\n                    <p className=\"modal-card-title\">{props.modalTitle}</p>\n                    <button\n                        className=\"delete\"\n                        aria-label=\"close\"\n                        onClick={() => props.setModalIsActive(false)}\n                    ></button>\n                </header>\n                <section className=\"modal-card-body\">{props.children}</section>\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectFilter } from \"../actions\";\n\nfunction FilterForm(props) {\n    const [activeButton, setActiveButton] = useState(\"open\");\n    const [bugFilter, setBugFilter] = useState({\n        status: \"open\",\n        project: \"\",\n    });\n    const setFilterButton = (e) => {\n        setActiveButton(e.target.value);\n        changeFilter(e);\n    };\n    const setProjectFilter = (e) => {\n        changeFilter(e);\n    };\n    const changeFilter = (e) => {\n        setBugFilter({ ...bugFilter, [e.target.name]: e.target.value });\n        props.selectFilter({ ...bugFilter, [e.target.name]: e.target.value });\n    };\n    return (\n        <div className=\"filter_form_wrap\">\n            <div className=\"filter_status_group\">\n                <label htmlFor=\"filter\">Bug Status:</label>\n                <div className=\"filter_status_wrap\">\n                    <button\n                        onClick={setFilterButton}\n                        name=\"status\"\n                        value=\"open\"\n                        className={\n                            activeButton === \"open\"\n                                ? \"filter-button active-button\"\n                                : \"filter-button\"\n                        }\n                    >\n                        Open\n                    </button>\n                    <button\n                        onClick={setFilterButton}\n                        name=\"status\"\n                        value=\"closed\"\n                        className={\n                            activeButton === \"closed\"\n                                ? \"filter-button active-button\"\n                                : \"filter-button\"\n                        }\n                    >\n                        Closed\n                    </button>\n                    <button\n                        onClick={setFilterButton}\n                        name=\"status\"\n                        value=\"\"\n                        className={\n                            activeButton === \"\"\n                                ? \"filter-button active-button\"\n                                : \"filter-button\"\n                        }\n                    >\n                        All\n                    </button>\n                </div>\n            </div>\n            <div className=\"filter_project_group\">\n                <label htmlFor=\"filter\">Project:</label>\n                <div className=\"select is-rounded is-small\">\n                    <select\n                        name=\"project\"\n                        id=\"projectForm\"\n                        onChange={setProjectFilter}\n                    >\n                        <option value=\"\" key={1}>\n                            All\n                        </option>\n                        {props.bugs.map((bug, i) => {\n                            return (\n                                <option value={bug.project} key={i + 1}>\n                                    {bug.project}\n                                </option>\n                            );\n                        })}\n                    </select>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        bugs: state.bugs,\n        selectedBug: state.selectedBug,\n        filters: state.filters,\n    };\n};\n\nexport default connect(mapStateToProps, {\n    selectFilter,\n})(FilterForm);\n","import React, { useEffect } from \"react\";\nimport Chart from \"chart.js\";\n\nexport default function BugChart(props) {\n    let data = {};\n    props.bugs\n        .filter((bug) => bug.status === \"open\")\n        .forEach((bug) => {\n            if (data[bug.severity]) {\n                data[bug.severity]++;\n            } else {\n                data[bug.severity] = 1;\n            }\n        });\n    useEffect(() => {\n        const ctx = document.getElementById(\"bug_chart\");\n        const colors = [\"#2B3954\", \"#42516F\", \"#606D88\"];\n        new Chart(ctx, {\n            type: \"bar\",\n            data: {\n                labels: [\"Minor\", \"Moderate\", \"Breaking\"],\n                datasets: [\n                    {\n                        data: [data.minor, data.moderate, data.breaking],\n                        backgroundColor: [colors[0], colors[1], colors[2]],\n                        borderColor: [colors[0], colors[1], colors[2]],\n                        minBarLength: 1,\n                        barThickness: 10,\n                    },\n                ],\n            },\n            options: {\n                animation: {\n                    animateScale: true,\n                },\n                cornerRadius: 20,\n                cutoutPercentage: 70,\n                legend: {\n                    display: false,\n                    position: \"bottom\",\n                    align: \"center\",\n                    labels: {\n                        fontColor: \"white\",\n                        fontFamily: \"Fira Mono\",\n                        boxWidth: 10,\n                        padding: 20,\n                        usePointStyle: true,\n                        drawRoundedRectangle: true,\n                        // fontSize: \"0.8rem\",\n                    },\n                },\n                scales: {\n                    yAxes: [\n                        {\n                            ticks: {\n                                beginAtZero: true,\n                            },\n                        },\n                    ],\n                },\n            },\n        });\n    }, [props.bugs]);\n    return (\n        <div className=\"chart_wrap\">\n            <h1>\n                <span className=\"bug_total\">\n                    {props.bugs.filter((bug) => bug.status === \"open\").length}\n                </span>{\" \"}\n                Bugs in Queue:\n            </h1>\n            <canvas\n                id=\"bug_chart\"\n                width=\"225\"\n                height=\"225\"\n                style={{ maxWidth: \"225px\" }}\n            ></canvas>\n        </div>\n    );\n}\n","import React from \"react\";\nimport FilterForm from \"./FilterForm\";\nimport BugChart from \"./BugChart\";\n\nexport default function SideBar(props) {\n    return (\n        <div className=\"sidebar_wrap\">\n            <div className=\"admin_wrap\">\n                <div className=\"user_wrap\">\n                    <div className=\"user_avatar\">\n                        <div className=\"user_avatar_inner\">\n                            <p>M</p>\n                        </div>\n                    </div>\n                    <div className=\"user_details\">\n                        <h2>Major Tom</h2>\n                        <p className=\"user_email\">majortom@test.com</p>\n                    </div>\n                </div>\n                <button\n                    onClick={() => props.setModalIsActive(true)}\n                    className=\"button is-primary\"\n                >\n                    <i className=\"fas fa-bug\"></i> Add Bug\n                </button>\n            </div>\n            <BugChart bugs={props.bugs} />\n            <FilterForm bugs={props.bugs} changeFilter={props.changeFilter} />\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport default function BugStatus(props) {\n    return (\n        <div className=\"bug_body_row\">\n            <span className={`status--${props.status} bug_label`}>\n                <i className=\"fas fa-question-circle\"></i>Status:{\" \"}\n            </span>\n            <p>{props.status}</p>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport default function BugSeverity(props) {\n    return (\n        <div className=\"bug_body_row\">\n            <p>\n                <span className=\"bug_label\">\n                    <i className=\"fas fa-wave-square\"></i>Severity:{\" \"}\n                </span>\n                <span className={`severity_label severity--${props.severity}`}>\n                    {props.severity}\n                </span>\n            </p>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { editBug } from \"../actions\";\n\nfunction EditBug(props) {\n    const [input, setInput] = useState(props.bug);\n    useEffect(() => {\n        setInput(props.bug);\n    }, [props.bug]);\n    const handleChange = (event) => {\n        setInput({ ...input, [event.target.id]: event.target.value });\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const newBugs = props.bugs.map((bug) => {\n            if (bug.id === input.id) {\n                return input;\n            }\n            return bug;\n        });\n        props.editBug([...newBugs]);\n        props.setModalIsActive(false);\n    };\n    return (\n        <div className=\"new_bug_wrap\">\n            <form onSubmit={handleSubmit} className=\"new_bug_form\">\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"title\">\n                        Title:\n                    </label>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"title\"\n                        id=\"title\"\n                        value={input.title}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"project\">\n                        Project:\n                    </label>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"project\"\n                        id=\"project\"\n                        value={input.project}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"blameFile\">\n                        Blame File:\n                    </label>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"blameFile\"\n                        id=\"blameFile\"\n                        value={input.blameFile}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"summary\">\n                        Summary:\n                    </label>\n                    <textarea\n                        className=\"textarea\"\n                        type=\"text\"\n                        name=\"summary\"\n                        id=\"summary\"\n                        value={input.summary}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field\">\n                    <label className=\"label\" htmlFor=\"readOut\">\n                        Error Readout:\n                    </label>\n                    <input\n                        className=\"input\"\n                        type=\"text\"\n                        name=\"readOut\"\n                        id=\"readOut\"\n                        value={input.readOut}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"field is-grouped last-row\">\n                    <label className=\"label\" htmlFor=\"severity\">\n                        Severity:\n                    </label>\n                    <div className=\"select\">\n                        <select\n                            name=\"severity\"\n                            id=\"severity\"\n                            onChange={handleChange}\n                            value={input.severity}\n                        >\n                            <option value=\"moderate\">Moderate</option>\n                            <option value=\"minor\">Minor</option>\n                            <option value=\"breaking\">Breaking</option>\n                        </select>\n                    </div>\n                    <label className=\"label\" htmlFor=\"status\">\n                        Bug Status:\n                    </label>\n                    <div className=\"select\">\n                        <select\n                            name=\"status\"\n                            id=\"status\"\n                            onChange={handleChange}\n                            value={input.status}\n                        >\n                            <option value=\"open\">Open</option>\n                            <option value=\"closed\">Closed</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"field is-grouped\">\n                    <div className=\"control\">\n                        <button type=\"submit\" className=\"button is-info\">\n                            Save Changes\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(state);\n    return {\n        bugs: state.bugs,\n        editBug: state.editBug,\n    };\n};\n\nexport default connect(mapStateToProps, {\n    editBug,\n})(EditBug);\n","import React from \"react\";\n\nexport default function BugError(props) {\n    return (\n        <div className=\"bug_body_row error_row\">\n            <p>\n                <span className=\"bug_label\">\n                    <i className=\"fas fa-bug\"></i>Error Readout:\n                </span>\n            </p>\n            <p className=\"bug_error_readout\">\n                {props.error ? props.error : \"No Error Message Available\"}\n            </p>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteBug } from \"../actions\";\nimport { selectBug } from \"../actions\";\nimport BugStatus from \"./BugStatus\";\nimport BugSeverity from \"./BugSeverity\";\nimport Modal from \"./Modal\";\nimport EditBug from \"./EditBug\";\nimport BugError from \"./BugError\";\n\nfunction BugBody(props) {\n    const [modalIsActive, setModalIsActive] = useState(false);\n    const deleteBug = (id) => {\n        const newList = props.bugs.filter((bug) => bug.id !== id);\n        props.deleteBug(newList);\n        props.selectBug(null);\n    };\n    return (\n        <div className=\"bug_body_wrap\">\n            <p className=\"bug_body_row\">\n                <span className=\"bug_label\">\n                    <i className=\"fas fa-quote-left\"></i>Summary:{\" \"}\n                </span>{\" \"}\n                {props.bug.summary}\n            </p>\n            <BugSeverity severity={props.bug.severity} />\n            <p className=\"bug_body_row\">\n                <span className=\"bug_label\">\n                    <i className=\"fas fa-file-alt\"></i>Blame File:\n                </span>{\" \"}\n                {props.bug.blameFile}\n            </p>\n            <BugError error={props.bug.readOut} />\n            <BugStatus status={props.bug.status} />\n            <div className=\"bug_controls_wrap\">\n                <button\n                    className=\"button is-primary edit_button\"\n                    onClick={() => setModalIsActive(true)}\n                >\n                    <i className=\"fas fa-edit\"></i>Edit\n                </button>\n                <button\n                    className=\"button is-danger\"\n                    onClick={() => deleteBug(props.bug.id)}\n                >\n                    <i className=\"fas fa-trash-alt\"></i>Delete\n                </button>\n            </div>\n            <Modal\n                modalIsActive={modalIsActive}\n                setModalIsActive={setModalIsActive}\n                modalTitle=\"Edit Bug\"\n                submitText=\"Save Changes\"\n            >\n                <EditBug bug={props.bug} setModalIsActive={setModalIsActive} />\n            </Modal>\n        </div>\n    );\n}\nconst mapStateToProps = (state) => {\n    return { bugs: state.bugs, selectedBug: state.selectedBug };\n};\n\nexport default connect(mapStateToProps, {\n    deleteBug,\n    selectBug,\n})(BugBody);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport BugBody from \"./BugBody\";\n\nfunction ExpandedBug(props) {\n    return (\n        <div className=\"expanded_wrap\">\n            {props.selectedBug ? (\n                <>\n                    <h2>{props.selectedBug.title}</h2>\n                    <BugBody\n                        bug={props.selectedBug}\n                        deleteBug={props.deleteBug}\n                    />\n                </>\n            ) : (\n                <div className=\"bug_empty_wrap\">\n                    <span className=\"expanded_bug_icon\">\n                        <i className=\"fas fa-bug\"></i>\n                    </span>\n                    <p>Select a bug to view details</p>\n                </div>\n            )}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { selectedBug: state.selectedBug };\n};\n\nexport default connect(mapStateToProps)(ExpandedBug);\n","import React from \"react\";\n\nexport default function BugTitle(props) {\n    return (\n        <div className=\"bug_row title_row\">\n            <span className={\"bug_title_wrap\"}>\n                <span className={`severity severity--${props.severity}`}></span>\n                <h2 className=\"bug_title\">\n                    {props.title.length > 30\n                        ? `${props.title.slice(0, 35)}..`\n                        : props.title}\n                </h2>\n            </span>\n            <h3>{props.project}</h3>\n        </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport BugTitle from \"./BugTitle\";\n\nexport default function Bug(props) {\n    const [isOpen, setIsOpen] = useState(false);\n    const [isActive, setIsActive] = useState(false);\n\n    useEffect(() => {\n        if (props.selectedBug) {\n            if (props.bug.id === props.selectedBug.id) {\n                setIsActive(true);\n            } else {\n                setIsActive(false);\n            }\n        }\n    }, [props.bug, props.selectedBug]);\n\n    const toggleIsOpen = () => {\n        setIsOpen(!isOpen);\n    };\n    return (\n        <article\n            className={isActive ? \"bug_wrap is_open\" : \"bug_wrap\"}\n            onClick={() => {\n                props.selectBug(props.bug);\n            }}\n        >\n            <BugTitle\n                id={props.bug.id}\n                title={props.bug.title}\n                project={props.bug.project}\n                severity={props.bug.severity}\n                toggle={toggleIsOpen}\n            />\n        </article>\n    );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectBug } from \"../actions\";\n\nfunction BugDropdown(props) {\n    const chooseBug = (e) => {\n        const selectedBug = props.bugs.filter(\n            (bug) => bug.title === e.target.value\n        );\n        props.selectBug(...selectedBug);\n    };\n    return (\n        <div className=\"bugs_dropdown_wrap\">\n            <div className=\"select is-rounded\">\n                <select name=\"bug\" id=\"bugForm\" onChange={chooseBug}>\n                    {props.bugs.map((bug, i) => {\n                        return (\n                            <option value={bug.title} key={i}>\n                                {bug.title}\n                            </option>\n                        );\n                    })}\n                </select>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        bugs: state.bugs,\n        selectedBug: state.selectedBug,\n        filters: state.filters,\n    };\n};\n\nexport default connect(mapStateToProps, {\n    selectBug,\n})(BugDropdown);\n","import React from \"react\";\nimport Bug from \"./Bug\";\nimport BugDropdown from \"./BugDropdown\";\nimport { connect } from \"react-redux\";\nimport { selectBug } from \"../actions\";\n\nfunction BugFeed(props) {\n    const checkFilters = (bug) => {\n        if (props.filters.status && props.filters.project) {\n            return (\n                bug.status === props.filters.status &&\n                bug.project === props.filters.project\n            );\n        } else if (props.filters.status && !props.filters.project) {\n            return bug.status === props.filters.status;\n        } else if (props.filters.project && !props.filters.status) {\n            return bug.project === props.filters.project;\n        }\n        return true;\n    };\n    return (\n        <>\n            <div className=\"bugs_wrap\">\n                {props.bugs\n                    .filter((bug) => checkFilters(bug))\n                    .sort((a, b) => (a.id > b.id ? -1 : 1))\n                    .map((bug, i) => {\n                        return (\n                            <Bug\n                                bug={bug}\n                                key={bug.title + i}\n                                selectedBug={props.selectedBug}\n                                selectBug={props.selectBug}\n                            />\n                        );\n                    })}\n            </div>\n            <BugDropdown bugs={props.bugs} />\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(state);\n    return {\n        bugs: state.bugs,\n        selectedBug: state.selectedBug,\n        filters: state.filters,\n    };\n};\n\nexport default connect(mapStateToProps, {\n    selectBug,\n})(BugFeed);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectBug } from \"../actions\";\nimport NewBug from \"./NewBug\";\nimport Modal from \"./Modal\";\nimport SideBar from \"./SideBar\";\nimport ExpandedBug from \"./ExpandedBug\";\nimport BugFeed from \"./BugFeed\";\n\nfunction Dashboard(props) {\n    const [modalIsActive, setModalIsActive] = useState(false);\n    return (\n        <section className=\"dashboard_wrap\">\n            <SideBar bugs={props.bugs} setModalIsActive={setModalIsActive} />\n            <div className=\"dashboard_inner_wrap\">\n                <BugFeed />\n                <ExpandedBug />\n            </div>\n            <Modal\n                modalIsActive={modalIsActive}\n                setModalIsActive={setModalIsActive}\n                modalTitle=\"Add Bug\"\n                submitText=\"Add Bug\"\n            >\n                <NewBug bugs={props.bugs} setModalIsActive={setModalIsActive} />\n            </Modal>\n        </section>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { bugs: state.bugs, selectedBug: state.selectedBug };\n};\n\nexport default connect(mapStateToProps, {\n    selectBug,\n})(Dashboard);\n","import React from \"react\";\n\nexport default function NavBar() {\n    return (\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"navbar-brand\">\n                <a\n                    className=\"navbar-item\"\n                    href=\"https://han-sen.github.io/aphid/\"\n                >\n                    <h1>Aphid</h1>\n                </a>\n\n                <a\n                    href=\"/\"\n                    role=\"button\"\n                    className=\"navbar-burger burger\"\n                    aria-label=\"menu\"\n                    aria-expanded=\"false\"\n                    data-target=\"navbarBasicExample\"\n                >\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </a>\n            </div>\n\n            <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n                <div className=\"navbar-start\">\n                    <a\n                        href=\"https://github.com/han-sen/aphid\"\n                        className=\"navbar-item\"\n                    >\n                        Source Code\n                    </a>\n                </div>\n\n                <div className=\"navbar-end\">\n                    <div className=\"navbar-item\">\n                        <div className=\"buttons\">\n                            <a\n                                href=\"https://han-sen.github.io/aphid/\"\n                                className=\"button is-primary\"\n                            >\n                                <strong>Sign up</strong>\n                            </a>\n                            <a\n                                href=\"https://han-sen.github.io/aphid/\"\n                                className=\"button is-info\"\n                            >\n                                Log in\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    );\n}\n","import React from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport NavBar from \"./components/NavBar\";\nimport \"./styles/global.scss\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <main>\n                <NavBar />\n                <Dashboard />\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n","const seedData = [\n    {\n        id: 1,\n        title: \"broken list\",\n        project: \"dogify\",\n        severity: \"breaking\",\n        blameFile: \"unknown\",\n        summary: \"can't render list of dogs\",\n        readOut: \"Unexpected token '<' at start of file\",\n        status: \"open\",\n    },\n    {\n        id: 2,\n        title: \"can't save form data\",\n        project: \"papaya\",\n        severity: \"breaking\",\n        blameFile: \"signUpForm.js\",\n        summary: \"form data is not coming in as expected\",\n        readOut: \"reference error: taget is not defined\",\n        status: \"open\",\n    },\n    {\n        id: 3,\n        title: \"wrong image order in slider\",\n        project: \"juniper\",\n        severity: \"minor\",\n        blameFile: \"slider.js\",\n        summary: \"slider starts from 2nd item in image array\",\n        readOut: \"\",\n        status: \"closed\",\n    },\n    {\n        id: 4,\n        title: \"can't access auth route after login\",\n        project: \"momostly\",\n        severity: \"moderate\",\n        blameFile: \"app.js\",\n        summary: \"unable to access gated route even with a valid json token\",\n        readOut: \"403 - Unauthorized Access\",\n        status: \"open\",\n    },\n    {\n        id: 5,\n        title: \"nested promises need cleanup\",\n        project: \"shipit\",\n        severity: \"moderate\",\n        blameFile: \"shipmentController.js\",\n        summary: \"ESLint is complaining about nested promises\",\n        readOut: \"moderate: Avoid Nesting Promises\",\n        status: \"closed\",\n    },\n    {\n        id: 6,\n        title: \"duplicate entries\",\n        project: \"papaya\",\n        severity: \"minor\",\n        blameFile: \"signUpForm.js\",\n        summary: \"form data is not coming in as expected\",\n        readOut: \"reference error: taget is not defined\",\n        status: \"open\",\n    },\n    {\n        id: 7,\n        title: \"not getting expected props\",\n        project: \"juniper\",\n        severity: \"breaking\",\n        blameFile: \"userModule.js\",\n        summary:\n            \"user profile area is not recieving its prop data in proper format\",\n        readOut: \"can't access [0] index of undefined\",\n        status: \"open\",\n    },\n    {\n        id: 8,\n        title: \"coin prices using deprecated API\",\n        project: \"coinster\",\n        severity: \"moderate\",\n        blameFile: \"getCoinPrices.js\",\n        summary:\n            \"the API endpoint we're using for realtime coin updates is scheduled to become deprecated\",\n        readOut: \"\",\n        status: \"open\",\n    },\n    {\n        id: 9,\n        title: \"not getting local tz for birthday notifcations\",\n        project: \"momostly\",\n        severity: \"minor\",\n        blameFile: \"userConfig.js\",\n        summary:\n            \"users arent getting midnight birthday notifications in correct timezone\",\n        readOut: \"\",\n        status: \"open\",\n    },\n    {\n        id: 10,\n        title: \"unused import cleanup needed\",\n        project: \"juniper\",\n        severity: \"minor\",\n        blameFile: \"treeFeed.js\",\n        summary:\n            \"multiple unused imports left over after refactoring store page\",\n        readOut: \"PlantCost is defined but never used no-unused-vars\",\n        status: \"open\",\n    },\n    {\n        id: 11,\n        title: \"infinite useEffect update\",\n        project: \"papaya\",\n        severity: \"breaking\",\n        blameFile: \"updatedTracker.js\",\n        summary:\n            \"analytics dashboard page is broken because of an infinite update loop\",\n        readOut:\n            \"Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate.\",\n        status: \"open\",\n    },\n];\n\nexport default seedData;\n","import { combineReducers } from \"redux\";\nimport seedData from \"../seed\";\n\nconst bugsReducer = (bugs = seedData, action) => {\n    if (action.type === \"ADD_BUG\") {\n        return [action.payload, ...bugs];\n    } else if (action.type === \"EDIT_BUG\") {\n        return action.payload;\n    } else if (action.type === \"DELETE_BUG\") {\n        return action.payload;\n    }\n    return bugs;\n};\n\nconst selectedBugReducer = (selectedBug = null, action) => {\n    if (action.type === \"BUG_SELECTED\") {\n        return action.payload;\n    }\n    return selectedBug;\n};\n\nconst filterReducer = (options = { status: \"open\", project: \"\" }, action) => {\n    if (action.type === \"FILTER_SELECTED\") {\n        return action.payload;\n    }\n    return { ...options };\n};\n\nexport default combineReducers({\n    bugs: bugsReducer,\n    filters: filterReducer,\n    selectedBug: selectedBugReducer,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reducers from \"./reducers\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={createStore(reducers)}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}